{% import "cpp_common" as cpp_common with context %}

#ifndef __{{backendConfig.NAMESPACE}}__GENERATED_AST_NODES_H__
#define __{{backendConfig.NAMESPACE}}__GENERATED_AST_NODES_H__

{{backendConfig.INITIAL_HEADERS}}

#if defined(_cplusplus) || defined(__cplusplus)
extern "C" {
#endif

{{backendConfig.PREAMBLE}}

{% if backendConfig.NAMESPACE %}
namespace {{backendConfig.NAMESPACE}} {
{% endif %}

// Foward defs
{% for node in nodes %}
class {{node.getNodeName()}};
typedef {{node.getNodeName()}} *{{node.getNodeName()}}Ptr; {% endfor %}

{% for node in nodes %}

class {{node.getNodeName()}} {% if node.getParentNode() %}: public {{ node.getParentNode() }}{% endif %}
{
public:
    {{ cpp_common.render_destructor(node) }}
    {% for prop_name, prop_type in node.properties.iteritems() %}
    {{ cpp_common.render_property_getter(node, prop_name, prop_type) }}
    {{ cpp_common.render_property_setter(node, prop_name, prop_type) }}
    {% endfor %}
{% if node.properties %}

protected:
    {% for prop_name, prop_type in node.properties.iteritems() %}
    {{ cpp_common.render_property_declaration(node, prop_name, prop_type)  }}
    {% endfor %}
{% endif %}
};
{% endfor %}

{% if backendConfig.NAMESPACE %}
}
{% endif %}

#if defined(_cplusplus) || defined(__cplusplus)
}
#endif

#endif

